[{"C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\index.js":"1","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\components\\chartComp.js":"2","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\App.js":"4","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\reportWebVitals.js":"5","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\components\\Loading.js":"6"},{"size":839,"mtime":1610313135698,"results":"7","hashOfConfig":"8"},{"size":1080,"mtime":1610344066372,"results":"9","hashOfConfig":"8"},{"size":5064,"mtime":1610216338446,"results":"10","hashOfConfig":"8"},{"size":5123,"mtime":1610345251627,"results":"11","hashOfConfig":"8"},{"size":364,"mtime":1610216338446,"results":"12","hashOfConfig":"8"},{"size":403,"mtime":1610342355079,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"m6b78s",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\index.js",[],["30","31"],"C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\components\\chartComp.js",["32","33"],"import React, {createRef} from 'react';\r\nimport Chart from \"chart.js\";\r\nimport classes from \"./LineGraph.module.css\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nclass ChartComp extends React.Component {\r\n    chartOptions = {\r\n        scales: {\r\n            yAxes: [{\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Percent of Total Population'\r\n                },\r\n\r\n                ticks: {\r\n                    maxTicksLimit : (window.innerHeight/150),\r\n                    // Include a dollar sign in the ticks\r\n                    callback: function (value, index, values) {\r\n                        return value + '%';\r\n                    }\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.chartRef = createRef();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Line ref={this.chartRef} data={this.props.data} options={this.chartOptions}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ChartComp;\r\n","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\App.js",["34","35","36","37"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport ChartComp from \"./components/chartComp\";\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Chart from \"chart.js\";\r\nimport {createRef} from \"react/cjs/react.production.min\";\r\nimport {Line} from \"react-chartjs-2\";\r\nimport Loading from \"./components/Loading\";\r\n\r\n\r\nclass App extends React.Component {\r\n  province_codes = [\r\n    {value: 'canada', label: 'Canada', population: 37590000},\r\n    {value: 'BC', label: 'British Columbia', population: 5071000},\r\n    {value: 'AB', label: 'Alberta', population: 4371000},\r\n    {value: 'MB', label: 'Manitoba', population: 1369000},\r\n    {value: 'NB', label: 'New Brunswick', population: 776827},\r\n    {value: 'NL', label: 'Newfoundland and Labrador', population: 521542},\r\n    {value: 'NT', label: 'Northwest Territories', population: 44826},\r\n    {value: 'NS', label: 'Nova Scotia', population: 971395},\r\n    {value: 'NU', label: 'Nunavut', population: 38780},\r\n    {value: 'ON', label: 'Ontario', population: 14570000},\r\n    {value: 'PE', label: 'Prince Edward Island', population: 156947},\r\n    {value: 'QC', label: 'Quebec', population: 8485000},\r\n    {value: 'SK', label: 'Saskatchewan', population: 1174000},\r\n    {value: 'YT', label: 'Yukon', population: 35874},\r\n  ];\r\n  loading = true;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {currentProv: this.province_codes[0], vacData: {}, caseData: {}}\r\n    void this.getData(this.state.currentProv);\r\n    document.title = `You clicked ${this.state.currentProv.value} times`;\r\n    this.defaultOption = this.state.currentProv;\r\n\r\n  }\r\n\r\n  _onSelect = (prov) => {\r\n    console.log('priv', prov);\r\n    this.setState({currentProv: prov})\r\n    this.province_codes.forEach(province => {\r\n      if(province.value === prov.value){\r\n        void this.getData(province);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('SHOULD ONLY RUN ONCE')\r\n    this.province_codes.forEach(async (prov) => {\r\n      await fetch(`https://api.opencovid.ca/timeseries?loc=${prov.value}&stat=avaccine|cases`);\r\n    })\r\n    this.loading = false;\r\n  }\r\n\r\n  async getData(prov) {\r\n    const url = `https://api.opencovid.ca/timeseries?loc=${prov.value}&stat=avaccine|cases`\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    console.log('days', data.cases);\r\n    const labels = []\r\n    const vacData = []\r\n    const dayData = []\r\n    const caseData = []\r\n    const caseLabels = []\r\n    data.avaccine.forEach((day, i) => {\r\n      labels.push(day.date_vaccine_administered)\r\n      vacData.push(((day.cumulative_avaccine/prov.population)*100).toFixed(2))\r\n      dayData.push(((day.avaccine/prov.population)*100).toFixed(2))\r\n    })\r\n    data.cases.forEach((day, i) => {\r\n      if(i % 4 === 0){\r\n        caseData.push(((day.cumulative_cases/prov.population)*100).toFixed(2))\r\n        caseLabels.push(day.date_report)\r\n      }\r\n\r\n    })\r\n    console.log(labels, vacData)\r\n    const caseState = {\r\n      labels: caseLabels,\r\n      yAxisID: \"Percent of Total Population\",\r\n      datasets: [{label: 'Total Cases', backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        data: caseData},\r\n       ]}\r\n    const dataState = {\r\n        labels: labels,\r\n        yAxisID: \"Percent of Total Population\",\r\n        datasets: [{label: 'Total Vaccinated', backgroundColor: 'rgba(99, 255, 102, 0.2)',\r\n        borderColor: 'rgb(99,255,102)',\r\n        data: vacData},\r\n          {label: 'Vaccinated that Day',\r\n\r\n            backgroundColor: 'rgba(132, 181, 255, 0.2)',\r\n            borderColor: 'rgb(132,181,255)',\r\n            data: dayData}]}\r\n    this.setState({vacData: dataState, caseData: caseState})\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    document.title = `Canada COVID Tracker`;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n        <div className=\"App container-xl\">\r\n          {this.loading && <Loading/>}\r\n          {!this.loading &&\r\n          <header className=\"App-header\">\r\n            <div className={'row justify-content-between w-100 text-center'}>\r\n              <div className={'col-12 d-flex flex-column justify-content-center text-center'}>\r\n                <h1>Canada COVID-19 Tracker</h1>\r\n              </div>\r\n            </div>\r\n            <Dropdown options={this.province_codes} onChange={this._onSelect} value={this.defaultOption} controlClassName={'control'} className={'my-3'}/>\r\n\r\n            <div className={'row g-1 justify-content-between w-100'}>\r\n              <div className={'col-12 d-flex flex-column justify-content-center text-center'}>\r\n                <h2>Vaccine Data</h2>\r\n                <ChartComp data = {this.state.vacData}/>\r\n              </div>\r\n              <div className={'col-12 d-flex flex-column justify-content-center text-center'}>\r\n                <h2>Cases</h2>\r\n                <ChartComp data = {this.state.caseData}/>\r\n              </div>\r\n            </div>\r\n          </header>}\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\ericn\\WebstormProjects\\canada-covid-tracker\\src\\components\\Loading.js",["38"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './loading.css'\r\n\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <div>\r\n            <div className={\"spinner-border spinner\"} role=\"status\">\r\n                <span className={\"sr-only\"}>Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":13},{"ruleId":"43","severity":1,"message":"47","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":15},{"ruleId":"43","severity":1,"message":"48","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":13},{"ruleId":"43","severity":1,"message":"49","line":9,"column":9,"nodeType":"45","messageId":"46","endLine":9,"endColumn":18},{"ruleId":"43","severity":1,"message":"50","line":10,"column":9,"nodeType":"45","messageId":"46","endLine":10,"endColumn":13},{"ruleId":"43","severity":1,"message":"51","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'classes' is defined but never used.","'logo' is defined but never used.","'createRef' is defined but never used.","'Line' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]